-- ARTICULO
CREATE TABLE Articulo(  
	ID_ARTICULO SERIAL PRIMARY KEY ,
	NOMBRE_ARTICULO VARCHAR(100) NOT NULL,
	RESUMEN_ARTICULO VARCHAR(200) NOT NULL
);
--AUTOR
CREATE TABLE Autor(  
	RUT_AUTOR CHAR(10) PRIMARY KEY,
	NOMBRE_AUTOR VARCHAR(100) UNIQUE NOT NULL,
	EMAIL_AUTOR VARCHAR(100) UNIQUE NOT NULL,
	USERID_AUTOR VARCHAR(50) UNIQUE NOT NULL,
	PASSWORD_AUTOR VARCHAR(50) UNIQUE NOT NULL
);
--REVISOR
CREATE TABLE Revisor(  
	RUT_REVISOR CHAR(10) PRIMARY KEY,
	NOMBRE_REVISOR VARCHAR(100) UNIQUE NOT NULL,
	EMAIL_REVISOR VARCHAR(100) UNIQUE NOT NULL,
	USERID_REVISOR VARCHAR(50) UNIQUE NOT NULL,
	PASSWORD_REVISOR VARCHAR(50) UNIQUE NOT NULL
	
);
--TOPICO
CREATE TABLE Topico(  
	ID_TOPICO SERIAL PRIMARY KEY ,
	NOMBRE_TOPICO VARCHAR(100) NOT NULL
);
--PUBLICACION (ARTICULO-AUTOR)
CREATE TABLE Publicacion(  
	RUT_AUTOR CHAR(10) NOT NULL,
	ID_ARTICULO INT NOT NULL,
	FECHA_PUBLICACION DATE NOT NULL,
	ES_CONTACTO BOOLEAN DEFAULT FALSE,
	CONSTRAINT FK_RUT_AUTOR FOREIGN KEY (RUT_AUTOR) REFERENCES AUTOR(RUT_AUTOR),
	CONSTRAINT FK_ID_ARTICULO FOREIGN KEY (ID_ARTICULO) REFERENCES ARTICULO(ID_ARTICULO),
	CONSTRAINT PK_PUBLICACION PRIMARY KEY (ID_ARTICULO, RUT_AUTOR)
);
--ESPECIALIDAD REVISOR (TOPICO-REVISOR)
CREATE TABLE Topico_ESP(  
    RUT_REVISOR CHAR(10) NOT NULL,
    ID_TOPICO INT NOT NULL,
    
    CONSTRAINT FK_REVISOR_ESP FOREIGN KEY (RUT_REVISOR) REFERENCES REVISOR(RUT_REVISOR),
    CONSTRAINT FK_TOPICO_ESP FOREIGN KEY (ID_TOPICO) REFERENCES TOPICO(ID_TOPICO),
    CONSTRAINT PK_TOPICO_ESP PRIMARY KEY (ID_TOPICO, RUT_REVISOR)
);
--TOPICOS-ARTICULO
CREATE TABLE Topico_Articulo(  
	ID_TOPICO INT NOT NULL,
	ID_ARTICULO INT NOT NULL,
	CONSTRAINT FK_ID_TOPICO FOREIGN KEY (ID_TOPICO) REFERENCES TOPICO(ID_TOPICO),
	CONSTRAINT FK_ID_ARTICULO FOREIGN KEY (ID_ARTICULO) REFERENCES ARTICULO(ID_ARTICULO),
	CONSTRAINT PK_TOPICO_ARTICULO PRIMARY KEY (ID_ARTICULO, ID_TOPICO)
);
--REVISION (ARTICULO-REVISOR)
CREATE TABLE Revision(  
	RUT_REVISOR CHAR(10) NOT NULL,
	ID_ARTICULO INT NOT NULL,
	FECHA_REVISION DATE NOT NULL,
	VALORACION_REVISION INTEGER NOT NULL,
	COMENTARIO_REVISION VARCHAR(100),
	CONSTRAINT FK_RUT_REVISOR FOREIGN KEY (RUT_REVISOR) REFERENCES REVISOR(RUT_REVISOR),
	CONSTRAINT FK_ID_ARTICULO FOREIGN KEY (ID_ARTICULO) REFERENCES ARTICULO(ID_ARTICULO),
	CONSTRAINT PK_REVISION PRIMARY KEY (ID_ARTICULO, RUT_REVISOR)
);